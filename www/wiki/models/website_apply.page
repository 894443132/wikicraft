<?npl
--[[
Title: org member
Author: wuxiangan
Date: 2016/11/17
]]

include_once("./abstract/base.page");
include_once("./website.page");

local website_apply = inherit(models.abstract.base, gettable("models.website_apply"))
website_apply.db_name="website_apply"

function website_apply:ctor()
	self:addfield("websiteId", "string")      -- 站点ID
	self:addfield("applyId", "string")        -- 申请ID
	self:addfield("applyType", "string")      -- 申请类型 成员 作品 其它
end

-- 创建申请记录
function website_apply:create(params)
	if (not params.websiteId) or (not params.applyId) or (not params.applyType) then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end
	
	self:db():insertOne({["+websiteId+applyId+applyType"]={params.websiteId, params.applyId, params.applyType}}, params, resume)
	return errors:wrap(yield())
end

-- 获得申请表
function website_apply:get(params) 
	local skip, limit = util:pagination(params)
	local query = util:formatQuery(params)
	query._id = {gt=0, skip=skip, limit=limit}
	self:db():find(query, resume)
	--self:db():find({["+_id+websiteId+applyId"]={gt=0}}, resume)
	return errors:wrap(yield())
end 

-- 获取待审核的成员
function website_apply:api_getMember(params)
	if not params.websiteId then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end
	params.applyType=const.APPLY_TYPE_MEMBER
	return self:get(params)
end

-- 获得待审核的作品列表
function website_apply:api_getWorks(params)
	if not params.websiteId then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end
	params.applyType=const.APPLY_TYPE_WORKS
	return self:get(params)
end

-- 删除记录
function website_apply:delete(params) 
	local query = util:formatQuery(params)
	self:db():delete(query, resume)
	return errors:wrap(yield())
end

