<?npl
--[[
Title: website of a user
Author: wuxiangan
Date: 2017/03/02
]]

NPL.load("(gl)script/ide/DateTime.lua")
local timehelp = commonlib.timehelp
include_once("./abstract/base.page")

local user_visit_history = inherit(models.abstract.base, gettable("models.user_visit_history"))
user_visit_history.db_name = 'user_visit_history'

function user_visit_history:ctor()
	self:addfield("userId", "number")
	self:addfield("websiteName","string")
	self:addfield("url","string")
	self:addfield("updateDate", "string")
end

-- 创建一条访问记录
function user_visit_history:api_upsert(params)
	if not params.userId or (not params.websiteName) then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end
	
	params.updateDate = ParaGlobal.GetDateFormat("yyyy-MM-dd")
	self:db():insertOne({['+userId+websiteName']={params.userId, params.websiteName}}, params, resume)
	
	return errors:wrap(yield())
end

-- 获得用户一天访问记录
function user_visit_history:api_getCurrentDay(params)
	local skip, limit = util:pagination(params)
	local currentDate, currentTiem = timehelp.GetLocalTime()
	local startDate = timehelp.get_next_date_str(currentDate, -1, "%04d-%02d-%02d")
	--local startDate = currentDate
	local key = ''
	local value = {gt=startDate}
	local query = {}
	if params.userId then
		key = key .. '+userId'
		value[#value+1]	= params.userId
	end

	if key ~= '' then
		query[key] = value
	end

	self:db():count(query, resume)
	local err, total = yield()		
	total = total or 0

	key = key .. '-updateDate'
	value['gt'] = startDate
	value['limit'] = limit
	value['skip'] = skip
	self:db():find({[key]=value}, resume)
	local err, data = yield()
	
	return errors:wrap(nil, {total=total, pageCount=util:getPageCount(total,limit),visitList=data})
end

