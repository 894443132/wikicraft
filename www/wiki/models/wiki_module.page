<?npl
--[[
Title: wiki module
Author: wuxiangan
Date: 2017/2/27
]]


include_once("./abstract/base.page")

local wiki_module = inherit(models.abstract.base, gettable("models.wiki_module"))
wiki_module.db_name = "wiki_module"


function wiki_module:ctor()
	self:addfield("name", "string")
	self:addfield("classifyName", "string")
	self:addfield("url", "string")
	self:addfield("logo", "string")
	self:addfield("desc", "string")
	self:addfield("flag", "number") -- 0 官方推荐
	self:addfield("useCount", "number")
end


function wiki_module:api_get(params) 
	local skip, limit = util:pagination(params)	
	
	self:db():count({['_id']={gt=-1}}, resume)
	local err, total = yield()

	self:db():find({['_id']={gt=-1,skip=skip, limit=limit}},resume)
	local err, moduleList = yield()
	
	return errors:wrap(nil,{total=total, moduleList=moduleList})
end

function wiki_module:api_getById(params) 
	if not params.moduleId then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():findOne({_id=params.moduleId}, resume)
	
	return errors:wrap(yield())
end

