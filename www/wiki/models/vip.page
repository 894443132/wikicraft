<?npl
--[[
Title: user vip
Author: wuxiangan
Date: 2017/08/08
]]


include_once("./abstract/base.page")

local vip = inherit(models.abstract.base, gettable("models.vip"))
vip.db_name = "vip"


function vip:ctor()
	self:addfield("username", "string")  -- username
	self:addfield("vipLevel", "number")  -- vip等级
	self:addfield("startDate", "string") -- 开始日期
	self:addfield("endDate", "string")   -- 结束日期
	--self:addfield("isValid", "number")   -- 是否有效
end


-- 增加记录  禁止外部调用
function vip:upsert(params)
	if not params.username then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():insertOne({["+username"]={params.username}}, params, resume)

	return errors:wrap(yield())
end

-- 通过用户名获取vip信息
function vip:api_getByUsername(params)
	if not params.username then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():findOne({["+username"]={params.username}}, resume)
	local _, vipInfo = yield()

	local date = ParaGlobal.GetDateFormat("yyyy-MM-dd")
	if not vipInfo then
		vipInfo = {
			username=params.username,
			vipLevel=0,
			startDate=date,
			endDate="",
			isValid=false,
		}
		self:upsert(vipInfo)
		return errors:wrap(nil, vipInfo)
	end

	if vipInfo.startDate <= date  and data <= vipInfo.endDate then
		vipInfo.isValid = true
	end

	return errors:wrap(nil, vipInfo)
end


