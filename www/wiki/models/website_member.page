<?npl --[[
Title: website renewal model
Author: wuxiangan
Date: 2016/11/14
]]

include_once("./abstract/base.page")

local website_member = inherit(models.abstract.base, gettable("models.website_member"))
website_member.db_name = "website_member"

function website_member:ctor()
	self:addfield("websiteId","number")    -- 站点ID
	self:addfield("userId", "number")      -- 成员ID
	-- self:addfield("role", "string")        -- 角色
	self:addfield("createDate", "string", false, 64)
	self:addfield("updateDate", "string", false, 64)
end

-- 添加成员
function website_member:create(params) 
	if (not params.websiteId) or (not params.userId) then
		return {error=errors.REQUEST_PARAMS_ERROR, data=nil}
	end

	params.createDate = ParaGlobal.GetDateFormat("yyyy-MM-dd")
	params.updateDate = params.createDate

	self:db():insertOne({websiteId=params.websiteId, userId=params.userId}, params, resume)
	local err, data = yield()

	if err then
		return errors:wrap(err, data)
	end

	return {error=errors.SUCCESS, data=data}
end

-- used to debug
function website_member:get(params)
	self:db():find(params, resume)
	local err, data = yield()
	
	return errors:wrap(err, data)
end

-- 获得站点成员列表
function website_member:api_getByWebsiteId(params)
	if not params.websiteId then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR, nil)
	end

	local skip, limit = util:pagination(params)
		
	self:db():find({"+websiteId"={params.websiteId, skip=skip, limit=limit}}, resume)
	local err, data = yield()

	for _, obj in ipairs(data) do
		-- 获得用户相关信息	
	end
	return errors:wrap(err, data)		
end

-- 获得成员数量
function website_member:api_getCountByWebsiteId(params) 
	if not params.websiteId then
		return {error=errors.REQUEST_PARAMS_ERROR, data=nil}
	end

	self:db():count({["+websiteId"]={params.websiteId}}, resume)
	local err, data = yield()
	
	return errors:wrap(err, data)
end

