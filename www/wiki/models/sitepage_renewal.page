<?npl
--[[
Title: website of a user
Author: wuxiangan
Date: 2016/11/29
]]

include_once("./abstract/base.page");

NPL.load("(gl)script/ide/DateTime.lua")
local timehelp = commonlib.timehelp

local sitepage_renewal = inherit(models.abstract.base, gettable("models.sitepage_renewal"))
sitepage_renewal.db_name = "sitepage_renewal"


function sitepage_renewal:ctor()
	self:addfield("username", "string")            -- 用户名 
	self:addfield("sitename", "string")
	self:addfield("pagename", "string")
	self:addfield("url", "string")

	self:addfield("updateDate", "string");
end


--function sitepage_renewal:api_upsert(params) 
	--if not params.username or not params.sitename then
		--return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	--end

	--self:db():insertOne({["+username+sitename"]={params.username, params.sitename}}, resume)

	--return errors:wrap(yield())
--end



function sitepage_renewal:api_upsert(params)
	if not params.url then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	params.updateDate = ParaGlobal.GetDateFormat("yyyy-MM-dd")
	
	self:db():insertOne({["+url"]={params.url}}, params, resume)

	return errors:wrap(yield())
end


function sitepage_renewal:api_getWeekCount(params)
	local currentDate, currentTiem = timehelp.GetLocalTime()
	local startDate = timehelp.get_next_date_str(currentDate, -7, "%04d-%02d-%02d")

	self:db():count({["-updateDate"]={gt=startDate}}, resume)
	local _, total = yield()

	return errors:wrap(nil, total or 0)
end
