<?npl
--[[
Title: site page info
Author: wuxiangan
Date: 2017/04/13
]]
include_once("./abstract/base.page")
include_once("./website.page")

-- 暂时不用
local website_pageinfo = inherit(models.abstract.base, gettable("models.website_pageinfo"))

website_pageinfo.db_name = "website_pageinfo";


function website_pageinfo:ctor() 
	self:addfield("userId","number")           -- userID
	self:addfield("websiteName","string")      -- 站点ID
	self:addfield("dataSourceId", "number")    -- 数据源id  0 -- 没有数据源
	self:addfield("pageinfo", "string")        -- 页信息  json 字符串
end

-- 添加记录
function website_pageinfo:api_upsert(params)
	if (not params.userId) or (not params.websiteName) or (not params.dataSourceId) then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():insertOne({["+userId+websiteName+dataSourceId"]={params.userId, params.websiteName, params.dataSourceId}}, params, resume)

	return errors:wrap(yield())
end

-- 删除记录
function website_pageinfo:api_delete(params)
	if (not params.userId) or (not params.websiteName) then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():delete({["+userId+websiteName"]={params.userId, params.websiteName}}, resume)

	return errors:wrap(yield())
end

-- 获取站点页信息
function website_pageinfo:api_getByUserId(params)
	if not params.userId then 
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end
	
	local websiteDB = models.website:new()
	local siteList = websiteDB:api_getAllByUserId({userId=params.userId}).data
	if not siteList then
		return errors:wrap(nil)
	end

	for _, site in ipairs(siteList) do
		site.pageinfo = self:api_get({websiteName=site.name, userId=site.userId, dataSourceId=site.dataSourceId or 0}).data or {}
		site.pageinfo = site.pageinfo.pageinfo
	end
	return errors:wrap(nil, siteList)	
end

-- 获取站点页信息
function website_pageinfo:api_get(params)
	if (not params.userId) or (not params.websiteName) or (not params.dataSourceId) then
		return errors:wrap(errors.REQUEST_PARAMS_ERROR)
	end

	self:db():findOne({["+userId+websiteName+dataSourceId"]={params.userId, params.websiteName, params.dataSourceId}}, resume)

	return errors:wrap(yield())
end


