<?npl
include_once("./abstract/base.page");

local nws = inherit(models.abstract.base, gettable("models.nws"));

nws.db_name = "nws";

function nws:ctor()
	
end
--修改
function nws:api_modify(params)
	if(not params._id) then
		return {errcode = "-1"}
	end

	if(not params.foo) then
		return {errcode = "-1"};
	end
	
	self:db():updateOne({_id = params._id},{foo = params.foo},resume);
	local err,data = yield();
	
	if(not err) then
		return {errcode = "1"}
	else
		return {errcode = "-1"}
	end
	
end
--删除
function nws:api_delete(params)
	if(not params.id) then
		return {errcode = "-1"}
	end
	
	self:db():deleteOne({_id = params.id}, resume);
	local err, data = yield();
	
	if not err then
		return {errcode = "1"};
	else
		return {errcode = "-1"};
	end
	
end
--增加
function nws:api_add(params)
	log(params);
	local myParams = params;
	
	log(params.foo)
	
	self:db():insertOne({["+foo"] = {myParams.foo}}, {foo = myParams.foo}, resume);
	local err, data = yield();
	
	if not err then
		return data;
	else
		return {error = "false"};
	end
end

--[[function nws:api_abb(params)
	log(params);
	local myParams = params;
	
	log(params.aoo)
	
	self:db():insertOne({["+foo"] = {myParams.aoo}}, {foo = myParams.aoo}, resume);
	local err, data = yield();
	
	if not err then
		return data;
	else
		return {error = "false"};
	end
end]]

function nws:api_getData()
	self:db():find({},resume);
	local err, data = yield();
	
	if not err then
		return data;
	else
		return {error = "false"};
	end
end

--[[function nws:api_text()
	local tpp = {
		worldName  = "",
		number     = "",
		name       = "",
		big        = "",
		time1      = "",
	}
	
	local boom = {}

		for a = 1,1000 do
		local b = commonlib.copy(tpp);
		
		b.worldName = "我" .. a;
		b.name  = "哈" .. a;
		b.number   = "1" .. a;
		b.big = "0" .. a;
		b.time1 = "aaa" .. a;
		
			boom[#boom + 1] = b;
		end

	return boom;
end]]
?>